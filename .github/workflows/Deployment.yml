name: Deployment.yml
on:
  push: 
    branches:
    - Deployment-Testing

jobs:
  Deployment:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for accurate results of code analysis 

      - name: Application Version
        id: semvar-app
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: 'true'
          tag_prefix: "v"

      - name: Display Version
        run: echo "Generated version is ${{ steps.semvar-app.outputs.version }}"

      - name: login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          
      - name: Build and push middletire Docker image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository }}:staging \
            -t ghcr.io/${{ github.repository }}-middletire:${{ steps.semvar-app.outputs.version }} \
            -f MiddleTire/Dockerfile \
            .
          docker push ghcr.io/${{ github.repository }}-middletire --all-tags    

      - name: Build and Push Frontend Docker Image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository }}-frontend:staging \
            -f FrontEnd/Dockerfile FrontEnd/
          docker push ghcr.io/${{ github.repository }}-frontend:staging

      - name: Create release notes
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.semvar-app.outputs.version }}
          generateReleaseNotes: true
          body: |
            This release includes the following container images:
              - ghcr.io/${{ github.repository }}:-middletire${{ steps.semvar-app.outputs.version }}
              - ghcr.io/${{ github.repository }}:-frontend${{ steps.semvar-app.outputs.version }}
          allowUpdates: true
          token: ${{ secrets.GHCR_TOKEN }}
      
      
      - name: Deploy to Staging Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          source: "docker-compose.yaml,db/**/*.*"
          target: dummy-data-app/
          rm: true

      - name: Update Staging Server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ vars.STAGING_SERVER_IP }}
          username: ${{ vars.STAGING_SERVER_USERNAME }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          script: |
            cd dummy-data-app
            
            cat <<EOF > .env
            DATABASE_ROOT_PASSWORD=${{ secrets.DATABASE_ROOT_PASSWORD }}
            DATABASE_NAME=${{ vars.DATABASE_NAME }}
            DATABASE_USER=${{ vars.DATABASE_USER }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            EOF
                        
            sudo docker compose pull
            sudo docker compose up -d --build
          debug: true